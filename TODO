add event foo to the MVC...
	+ split that goodness out into a separate View widget
	  [ in a separate module ]

* Connection foo
	+ connect stuff
	+ get settings imported
	+ move ModelViewController DetectComPorts to RepRapSerial ...
	  ditto ValidateComPort

* rename processcontroller.h to 'settings' or 'config' globally ... ?
	+ add a 'changed' signal ...

* poke at CopySettingsToGUI

* next tab to implement:
	+ print - simple widgets ...
	+ interactive control (?)

* connection button
	+ should require confirmation before going off-line
	  during a print ... [ and/or 'pause printing' ]

* fix arcball / rotation resetting ...

* kill all reprapserial uses of 'mvc' 
	+ use signals instead.
	+ for 'serialConnectionLost' etc.
	+ 'serialConnected' - should be this ...

	bool m_bConnecting;
	bool m_bConnected;


* StartPrint should signal ...


listener for state_changed:
	+ if 'DISCONECCTED' ->
	{
		m_bConnecting = false;
		m_bConnected = false;
		m_bPrinting = false;
		{
			ToolkitLock guard;
			gui->MVC->serialConnectionLost();
		}
		return;
	}

				ToolkitLock guard;

				// Tell GUI we are ready to go.
				notifyConnection(true);
				gui->MVC->serialConnected();
			}

Fl::add_timeout ... !?

* Audit all Fl::Lock()'s
	+ Create a 'Guard' lock that doesn't take the GDK_THREADS
	  lock if we already own the default mainloop ;-)

